
- if (is_archive()) pageTitle = 'Archives'
- if (is_tag()) pageTitle = 'Tag: ' + page.tag
- if (is_category()) pageTitle = 'Category: ' + page.category
- if (is_month()) pageTitle += ': ' + page.month + '/' + page.year
- if (is_year()) pageTitle += ': ' + page.year
- var pageTitle = page.title || theme.user && theme.user.name + "'s blog"
- var appearance = theme.appearance ? theme.appearance : 'auto'

include methods

doctype html
html(lang=config.language class= `appearance-${ appearance }`)
  head
    meta(charset='UTF-8')
    title= pageTitle
    meta(name="description" content= config.description || theme.user && theme.user.description)
    meta(name="viewport" content="width=device-width, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no, initial-scale=1")

    <!-- Google Analytics -->
    if(theme.ga_track_id)
      script.
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q || []).push(arguments)},i[r].l=1 * new Date();a=s.createElement(o),
          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

        ga('create', '#{theme.ga_track_id}', '#{ theme.ga_domain || "auto" }');
        ga('send', 'pageview');
    <!-- End Google Analytics -->

    <!-- Baidu Analytics -->
    if (theme.ba_track_id)
      script.
        var _hmt = _hmt || [];
        (function() {
        var hm = document.createElement("script");
        hm.src = "//hm.baidu.com/hm.js?" + '#{theme.ba_track_id}';
        var s = document.getElementsByTagName("script")[0];
        s.parentNode.insertBefore(hm, s);
        })();
    <!-- End Baidu Analytics -->

    <!-- Open Graph Meta Tags -->
    meta(property="og:title" content=(page.title || config.title))
    - var ogDescription = page.excerpt || page.description || (page.content ? page.content.replace(/<[^>]*>/g, '').substring(0, 100) + '...' : config.description)
    meta(property="og:description" content=ogDescription)
    meta(property="og:type" content=(is_post() ? "article" : "website"))
    meta(property="og:url" content=config.url + url_for(page.path))
    meta(property="og:site_name" content=config.title)
    
    <!-- 使用文章的 cover 圖片或第一張圖片作為 Open Graph 圖片 -->
    if page.cover
      meta(property="og:image" content=config.url + '/' + page.cover)
    else if page._content && page._content.match(/!\[.*?\]\((.*?)\)/)
      - var imageMatch = page._content.match(/!\[.*?\]\((.*?)\)/)
      - var imagePath = imageMatch[1]
      meta(property="og:image" content=(imagePath.startsWith('http') ? imagePath : config.url + '/' + imagePath))
    else if page.content && page.content.match(/!\[.*?\]\((.*?)\)/)
      - var imageMatch = page.content.match(/!\[.*?\]\((.*?)\)/)
      - var imagePath = imageMatch[1]
      meta(property="og:image" content=(imagePath.startsWith('http') ? imagePath : config.url + '/' + imagePath))
    else if theme.user && theme.user.avatar
      meta(property="og:image" content=config.url + '/' + theme.user.avatar)
    
    <!-- Theme Color for Discord Embed -->
    if page.theme_color
      meta(name="theme-color" content=page.theme_color data-manual="true")
    else if theme.default_theme_color
      meta(name="theme-color" content=theme.default_theme_color)
    else
      meta(name="theme-color" content="#9cfff7")
    
    <!-- Twitter Card Meta Tags -->
    meta(name="twitter:card" content="summary_large_image")
    meta(name="twitter:site" content="@imyimang")
    meta(name="twitter:creator" content="@imyimang")
    meta(name="twitter:title" content=(page.title || config.title))
    - var twitterDescription = page.excerpt || page.description || (page.content ? page.content.replace(/<[^>]*>/g, '').substring(0, 100) + '...' : config.description)
    meta(name="twitter:description" content=twitterDescription)
    
    if page.cover
      meta(name="twitter:image" content=config.url + '/' + page.cover)
    else if page._content && page._content.match(/!\[.*?\]\((.*?)\)/)
      - var imageMatch = page._content.match(/!\[.*?\]\((.*?)\)/)
      - var imagePath = imageMatch[1]
      meta(name="twitter:image" content=(imagePath.startsWith('http') ? imagePath : config.url + '/' + imagePath))
    else if page.content && page.content.match(/!\[.*?\]\((.*?)\)/)
      - var imageMatch = page.content.match(/!\[.*?\]\((.*?)\)/)
      - var imagePath = imageMatch[1]
      meta(name="twitter:image" content=(imagePath.startsWith('http') ? imagePath : config.url + '/' + imagePath))
    else if theme.user && theme.user.avatar
      meta(name="twitter:image" content=config.url + '/' + theme.user.avatar)
    <!-- End Open Graph and Twitter Card -->

    link(rel="icon" href= url_for(theme.favicon))
    link(rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css")
    link(rel="stylesheet" href= url_for('/style/common/bulma.css'))
    link(rel="stylesheet" href= url_for('/style/base.css'))
    link(rel="stylesheet" href= url_for('/style/common/helper.css'))
    if theme.loading_animation && theme.loading_animation.enable
      link(rel="stylesheet" href= url_for('/style/loading-animation.css'))
    
    // Content blocks CSS
    if config.content_blocks && config.content_blocks.enable
      style(type='text/css')!= content_blocks_css()
    
    script(src= url_for("/js/common.js"))
    script(src= url_for("/js/theme-toggle.js"))
    if theme.loading_animation && theme.loading_animation.enable
      script.
        window.loadingAnimationConfig = {
          enable: true,
          duration: #{theme.loading_animation.duration || 4000},
          skipOnReturn: #{theme.loading_animation.skip_on_return || true},
          
          // Default (regular domain) settings
          default: {
            enable: #{theme.loading_animation.default && theme.loading_animation.default.enable || false},
            blogName: '#{theme.loading_animation.default && theme.loading_animation.default.blog_name || "YIMANG"}',
            textColor: '#{theme.loading_animation.default && theme.loading_animation.default.text_color || "#e50914"}',
            icon: {
              enable: #{theme.loading_animation.default && theme.loading_animation.default.icon && theme.loading_animation.default.icon.enable || true},
              image: '#{theme.loading_animation.default && theme.loading_animation.default.icon && theme.loading_animation.default.icon.image ? url_for(theme.loading_animation.default.icon.image) : url_for("images/avatar.webp")}',
              animate: #{theme.loading_animation.default && theme.loading_animation.default.icon && theme.loading_animation.default.icon.animate || true}
            }
          },
          
          // Tor (.onion) settings
          onion: {
            enable: #{theme.loading_animation.onion && theme.loading_animation.onion.enable || false},
            blogName: '#{theme.loading_animation.onion && theme.loading_animation.onion.blog_name || "TOR YIMANG"}',
            textColor: '#{theme.loading_animation.onion && theme.loading_animation.onion.text_color || "#7d4698"}',
            icon: {
              enable: #{theme.loading_animation.onion && theme.loading_animation.onion.icon && theme.loading_animation.onion.icon.enable || true},
              image: '#{theme.loading_animation.onion && theme.loading_animation.onion.icon && theme.loading_animation.onion.icon.image ? url_for(theme.loading_animation.onion.icon.image) : url_for("images/tor.webp")}',
              animate: #{theme.loading_animation.onion && theme.loading_animation.onion.icon && theme.loading_animation.onion.icon.animate || true}
            }
          },
          
          // I2P settings
          i2p: {
            enable: #{theme.loading_animation.i2p && theme.loading_animation.i2p.enable || false},
            blogName: '#{theme.loading_animation.i2p && theme.loading_animation.i2p.blog_name || "I2P YIMANG"}',
            textColor: '#{theme.loading_animation.i2p && theme.loading_animation.i2p.text_color || "#0066cc"}',
            icon: {
              enable: #{theme.loading_animation.i2p && theme.loading_animation.i2p.icon && theme.loading_animation.i2p.icon.enable || true},
              image: '#{theme.loading_animation.i2p && theme.loading_animation.i2p.icon && theme.loading_animation.i2p.icon.image ? url_for(theme.loading_animation.i2p.icon.image) : url_for("images/i2p.webp")}',
              animate: #{theme.loading_animation.i2p && theme.loading_animation.i2p.icon && theme.loading_animation.i2p.icon.animate || true}
            }
          }
        };
      script(src= url_for("/js/loading-animation.js"))
    if theme.auto_theme_color && theme.auto_theme_color.enable
      script(src= url_for("/js/color-extractor.js"))
    block head

  body.is-flex.is-flex-direction-column(data-code-copy= theme.code_copy && theme.code_copy.enable ? 'true' : 'false')
    include widget-header
    main
      block content
    footer.is-flex.is-flex-direction-column.is-align-items-center.is-flex-shrink-0.is-family-serif
      section.sns-container
        include widget-sns
      p
        span Copyright ©
        - var author = (theme.user && theme.user.name) || config.author || ''
        span= ' ' + author + ' ' + new Date().getFullYear()
      div.is-flex.is-justify-content-center.is-flex-wrap-wrap
        p Powered by Hexo &verbar;&nbsp;
        p.is-flex.is-justify-content-center
          a(title="Hexo theme author" href='//github.com/haojen') Theme by Haojen&nbsp;
        div(style="margin-top: 2px")
          a(title="github-button" class="github-button" href="https://github.com/haojen/hexo-theme-Claudia" data-color-scheme="no-preference: light; light: light; dark: dark;" data-show-count="true")
      
      // 部落格統計信息
      - var stats = getBlogStats()
      div.blog-stats.is-flex.is-justify-content-center.is-flex-direction-column.has-text-centered(style="margin-top: 10px; font-size: 0.85em; color: #666;")
        div.is-flex.is-justify-content-center.is-flex-wrap-wrap
          span.stats-item(style="margin: 0 8px;")
            i.fas.fa-file-alt(style="margin-right: 4px;")
            | 共 #{stats.postCount} 篇文章
          span.stats-item(style="margin: 0 8px;")
            i.fas.fa-font(style="margin-right: 4px;") 
            | 總字數 #{stats.totalWords.toLocaleString()} 字
          span.stats-item(style="margin: 0 8px;")
            i.fas.fa-calendar-alt(style="margin-right: 4px;")
            | 運行 #{stats.runningDays} 天
      
      div
        span!= theme.user && theme.user.footnotes

    script(async defer src="https://buttons.github.io/buttons.js")
    block script

